public class MaintenanceRequestHelper {
    public static void updateWorkOrders(List<Case> oldCases, List<Case> newCases){
    Set<Id> requestIds = new Set<Id>();
    for(Case oldRequest : oldCases) {
        if((oldRequest.Type == 'Repair' || oldRequest.Type == 'Routine Maintenance') &&
          (oldRequest.Status != 'Closed')) {
            requestIds.add(oldRequest.Id);
        }
    }
    List<Case> requests = new List<Case>();
    for(Case updatedRequest : newCases) {
        if(updatedRequest.Status == 'Closed' && requestIds.contains(updatedRequest.Id)) {
            Case newRequest = updatedRequest.clone();
            newRequest.Subject += '(Routine Maintenance)';
            newRequest.Type = 'Routine Maintenance';
            newRequest.Date_Reported__c = Date.today();
            //Find the shortest maintenace cycle and set next due date
            integer minCycle = (integer)[
                SELECT Equipment__r.Maintenance_Cycle__c
                FROM Work_Part__c 
                WHERE Maintenance_Request__r.Id = :updatedRequest.Id 
            	ORDER BY Equipment__r.Maintenance_Cycle__c ASC
            	LIMIT 1].Equipment__r.Maintenance_Cycle__c;
           	newRequest.Date_Due__c = Date.today().addDays(minCycle);
            requests.add(newRequest);
        }
    }
    //Creat new requests
    insert requests;
    }           
}